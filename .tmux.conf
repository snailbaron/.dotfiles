#
# Terminal options
#

# Set TERM to "screen-256color".
# The "screen" part allows programs to work properly under tmux magic (panes,
# etc.); the "256color" part notifies that the terminal supports many colors
# (which is important in command-line Vim, for example.
set -g default-terminal "screen-256color"

# Send xterm escape sequences for special keys. They are easier to map in Vim,
# for some reason.
set-window-option -g xterm-keys on

# Enable mouse.
# TODO: May not be present in old versions of tmux (it has several separate
# mouse options for that), workaround?
set -g mouse on

#
# Vim interop
#

# is_vim and its usage is taken from vim-tmux-navigator docs:
#
#   Smart pane switching with awareness of Vim splits.
#   See: https://github.com/christoomey/vim-tmux-navigator
#
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Move to pane
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Resize current pane
bind-key -n C-Left if-shell "$is_vim" "send-keys C-Left" "resize-pane -L 5"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-Down" "resize-pane -D 3"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-Up" "resize-pane -U 3"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-Right" "resize-pane -R 5"
